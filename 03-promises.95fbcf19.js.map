{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,QAC7BI,SAAUL,SAASC,cAAc,WAG7BK,EAAW,CACfP,MAAO,EACPG,KAAM,EACNC,OAAQ,GAGV,SAASI,EAAcC,GACrBF,EAASE,EAAIC,OAAOC,MAAQC,OAAOH,EAAIC,OAAOG,M,CAIhD,SAASC,EAAcC,EAAUf,GAC/B,MAAMgB,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE7BC,YAAW,KACLN,EACFI,EAAQG,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBV,QAAiBf,QAEpEqB,EAAKE,EAAA1B,GAAS2B,OAAOE,QAAQ,sBAAoBX,QAAef,OAAW,GAE9EA,EAAM,G,CAIbD,EAAKC,MAAM2B,iBAAiB,QAASnB,GACrCT,EAAKI,KAAKwB,iBAAiB,QAASnB,GACpCT,EAAKK,OAAOuB,iBAAiB,QAASnB,GAItCT,EAAKO,SAASqB,iBAAiB,SAAUlB,IACvCA,EAAImB,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,GAAKtB,EAASH,OAAQyB,GAAK,EACzCf,EAAce,EAAGtB,EAASP,OACvB8B,MAAKC,IAAA,IACLC,OAAMC,IAAA,IAET1B,EAASP,OAASO,EAASJ,KAC3BJ,EAAKM,KAAK6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('[name = delay]'),\n  step: document.querySelector('[name = step]'),\n  amount: document.querySelector('[name = amount]'),\n  form: document.querySelector('form'),\n  startBtn: document.querySelector('button')\n}\n\nconst formData = {\n  delay: 0,\n  step: 0,\n  amount: 0,\n}\n\nfunction onInputChange(evt) {\n  formData[evt.target.name] = Number(evt.target.value)\n  // console.log(formData)\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {   \n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n      } else {\n        reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n      }\n    }, delay)\n  })\n}\n\nrefs.delay.addEventListener('input', onInputChange)\nrefs.step.addEventListener('input', onInputChange)\nrefs.amount.addEventListener('input', onInputChange)\n\n\n\nrefs.startBtn.addEventListener('click', (evt) => {\n  evt.preventDefault()\n\n  for (let i = 1; i <= formData.amount; i += 1) {\n    createPromise(i, formData.delay)\n      .then(result => { })\n      .catch(error => { })\n    \n    formData.delay += formData.step;\n    refs.form.reset()\n  }\n})\n\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","form","startBtn","$47d4ff9957288465$var$formData","$47d4ff9957288465$var$onInputChange","evt","target","name","Number","value","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","failure","addEventListener","preventDefault","i","then","result","catch","error","reset"],"version":3,"file":"03-promises.95fbcf19.js.map"}